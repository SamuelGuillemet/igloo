' ------------------------------------------------------------------------------------------------------------ '
' -------------------------------------------------- DATA ---------------------------------------------------- '
' ------------------------------------------------------------------------------------------------------------ '

!$dataFormat = {
    "entity": "Développeur", 
    "name": "Création d'un développeur",
    "demande": "Demande la création d'un développeur", 
    "create": "CreeDeveloppeur(nom, prenom, alias)", 
    "requirements": [
        "nom",
        "prénom",
        "alias"
    ],
    "preconditions": [
        "Vérifie l'unicité de l'alias"
    ],
    "postconditions": [
        {
            "entity": "Développeur",
            "name": "Le développeur est créé" 
        }
    ]
}



' ------------------------------------------------------------------------------------------------------------ '
' -------------------------------------------------- CODE ---------------------------------------------------- '
' ------------------------------------------------------------------------------------------------------------ '
skinparam style strictuml
skinparam sequenceArrowThickness 2
skinparam backgroundColor #EEEBDC
skinparam classFontName Aapex

!procedure $requirement($nameTemp) 
    CLI --> Utilisateur ++ : Demande $nameTemp
    Utilisateur -> CLI -- : Saisit $nameTemp
!endprocedure

!procedure $precondition($nameTemp)
    !$name = $nameTemp.bool + "=" + $nameTemp.condition + ":" + $nameTemp.entity
    SuiPro -> SuiPro : $name
    !if $nameTemp.opt
        !$nameOpt = $nameTemp.bool + " " + $nameTemp.opt
        opt $nameOpt
!endprocedure

!procedure $generateOptEnd($dataTemp)
    !if $dataTemp.preconditions
        !foreach $precondition in $dataTemp.preconditions
            !if $precondition.opt
                end
            !endif
        !endfor
    !endif

!procedure $postcondition($postconditionTemp) 
    Entity -> $postconditionTemp.entity ** : $postconditionTemp.name
!endprocedure

!procedure $generatePostcondition($dataTemp)
    !if $dataTemp.postconditions
            !foreach $postcondition in $dataTemp.postconditions
                $postcondition($postcondition)
            !endfor
    !endif
!endprocedure

!function $generateRequirement($dataTemp)
    !$b = "" 
    !foreach $requirement in $dataTemp.requirements
        !$b = $b + " " + $requirement
    !endfor
    !$c = ", non vide et non null"
    !return $b + $c
!endprocedure

!function $generatePreconditionName($dataTemp)
    !$b = ""
    !foreach $precondition in $dataTemp.preconditions
        !$b = $b + " " + $precondition.bool
    !endfor
    !return $b + " = true"
!endfunction

!procedure $generatePrecondition($dataTemp)
    !if $dataTemp.preconditions
        !foreach $precondition in $dataTemp.preconditions
            $precondition($precondition)
        !endfor 
    !endif
!endprocedure



!procedure Draw($data) 
    skinparam style strictuml

    !$entity = $data.entity
    !$name = $data.name
    !$create = $data.create

    title $name


    actor Développeur as Utilisateur #Orange
    control SuiPro as SuiPro
    participant $entity as Entity


    Utilisateur -> SuiPro : $create
    activate SuiPro #Gray
    deactivate Utilisateur
 
    opt $generateRequirement($data)

    $generatePrecondition($data)

    !if $data.preconditions
        opt $generatePreconditionName($data)
            SuiPro -> Entity ** : $create
            activate Entity
            $generatePostcondition($data)
            Entity --> SuiPro -- 
        end
    end
    $generateOptEnd($data)
    SuiPro --> Utilisateur
    deactivate SuiPro

    !else 
        
        SuiPro -> Entity ** : $create
        activate Entity
        $generatePostcondition($data)
        Entity -> SuiPro -- 
        SuiPro -> Utilisateur ++
        deactivate SuiPro
    !endif

    ' CLI --> Utilisateur : Affiche le résultat de l'opération

!endprocedure


'Draw($dataFormat)